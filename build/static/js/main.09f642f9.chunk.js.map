{"version":3,"sources":["utility/constants/urlRoutesConstants.js","Common/utilities/DataProvider.js","Services/randomData/randomDataService.ts","pages/rawfile.js","pages/newfile.js","App.js","theme.js","index.js"],"names":["urlRoutesConstants","DataProvider","this","_baseUrl","calculateExpireTime","userData","JSON","parse","localStorage","getItem","expireTimeMilliSec","Date","token","expires_in","currentTimeInMillSec","STORE","dispatch","type","SESSION_DATA","sessionData","status","showPopup","e","url","method","isBodyRequired","data","a","includes","headers","response","fetch","manageUrl","body","stringify","commonResponse","length","window","location","reload","requestFunction","Accept","responseType","console","log","get","json","addAuthHeader","getAuthHeader","mode","blob","indexOf","furl","responsedata","Object","assign","success","randomDataServicde","dataProvider","GetData","PostData","resizeStyle","display","alignItems","justifyContent","border","background","darkTheme","createTheme","palette","primary","main","OptimizedComponent","React","memo","id","poi","tweet_text","TableRow","hover","role","tabIndex","key","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","secondary","chart_Data","BottomNavigationAction","label","icon","poi_name","percent","pie_data","rawfile","props","onUserNameChange","event","setState","query_term","target","value","onPoiNameChange","filter_type","onLangTypeChange","lang_type","onCountryChange","country","onTopicNameChange","topic","onClearData","onClearSearchData","redirectToCreate","history","push","renderTweetList","state","getmydata","documents","map","item","index","renderPoiTweetList","getmyPoiData","renderPositiveExtreame","extreme","positive_tweets","Box","sx","width","maxHeight","BottomNavigation","showLabels","renderNegativeExtreame","negative_tweets","renderSentimentTweets","antivaccine_tweets","poi_data","tweet_type","tweet_data","keywords","tweet_sentiment","RandomDataService","toggle","bind","dropdownOpen","query","getPoiData","poiData","error","getRandomData","randomData","poi_dist","chartData","chartData_1","style","textAlign","ThemeProvider","theme","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","Typography","variant","align","component","flexGrow","Button","className","onClick","Grid","container","spacing","xs","TextField","name","onChange","TableHead","TableCell","minWidth","FormControl","m","InputLabel","Select","labelId","MenuItem","Paper","overflow","TableContainer","Table","stickyHeader","TableBody","defaultSize","height","words","options","fontFamily","fontSizes","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","PieChart","Pie","nameKey","cx","cy","outerRadius","Component","population_data","Keyword","Sentiment_Score","reply_data","reply_sentiment","lang_data","antivac_data","vax_data","Positive","Negative","Neutral","newfile","UserIdentity","LineChart","margin","top","right","left","bottom","Line","stroke","App","exactl","path","red","A400","ReactDOM","render","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.09f642f9.chunk.js","sourcesContent":["export const urlRoutesConstants = {\n\trawfile: \"/rawfile\",\n\tnewfile: \"/newfile\"\n\t// srci: \"/dgndcf/srci\",\n\t// sdk: \"/dgndcf/sdk\",\n\t// billingAddress: \"/dgndcf/billingAddress\",\n\t// shippingAddress: \"/dgndcf/shippingAddress\",\n\t// otpEntry: \"/dgndcf/otpEntry\",\n\t// reEnterCard: \"/dgndcf/reRnterCard\",\n\t// reviewConfirm: \"/dgndcf/reviewConfirm\",\n\t// confirmation: \"/dgndcf/confirmation\",\n\t// cardholderVerificationChannel: \"/dgndcf/cardholderVerificationChannel\",\n\t// cardholderVerificationOtp: \"/dgndcf/cardholderVerificationOtp\",\n\t// merchant: \"/dgndcf/merchant\",\n\t// accountLockdown: \"/dgndcf/accountLockdown\",\n\t// networkVerification: \"/dgndcf/networkVerification\",\n\t// verificationChannel: \"/dgndcf/verificationChannel\",\n\t// VerificationChannelOtp: \"/dgndcf/verificationChannelOtp\",\n\t// removeCard: \"/dgndcf/removeCard\",\n\t// removeShippingAddress: \"/dgndcf/removeShippingAddress\",\n\t// accountLocked : \"/dgndcf/accountLocked\",\n\t// cannotAddcard: \"/dgndcf/cannotAddcard\",\n\t// unlockaccount: \"/dgndcf/unlockAccount\",\n\t// provCountExceeded : \"/dgndcf/provCountExceeded\",\n\t// tooManyProfiles : \"/dgndcf/tooManyProfiles\",\n\t// duplicateCard: \"/dgndcf/duplicateCard\",\n\t// existingProfile: \"/dgndcf/existingProfile\",\n\t// SomethingWentWrong: \"/dgndcf/somethingWentWrong\"\n};\n","\r\n// import { createStore } from 'redux';\r\n// import rootReducer from '../reducers/rootReducer';\r\n// import { SESSION_DATA } from '../actions/sessionActions';\r\n// const STORE = createStore(rootReducer);\r\n/* eslint-disable */\r\nlet method = '';\r\nconst SESSION_ACTIVE = 'Active';\r\nconst SESSION_WILL_EXPIRE = 'Will_Expire';\r\nconst SESSION_EXPIRED = 'Expired';\r\nexport class DataProvider {\r\n\r\n  constructor() {\r\n    this._baseUrl = \"http://3.129.8.62:8000\";\r\n\r\n    // this.getAuthHeader = () => {\r\n    //   try {\r\n    //     let userData = JSON.parse(localStorage.getItem('userData'));\r\n    //     if (userData != null)\r\n    //       return userData.token.access_token;\r\n    //   }\r\n    //   catch (e) {\r\n    //     return \"\";\r\n    //   }\r\n    // };\r\n\r\n    this.calculateExpireTime = () => {\r\n      try {\r\n        let userData = JSON.parse(localStorage.getItem('userData'));\r\n        if (userData != null) {\r\n          let expireTimeMilliSec = Date.parse(userData.token.expires_in);\r\n          let currentTimeInMillSec = Date.parse(new Date() + \"\");\r\n          //one minutes subtracted from expireTime.\r\n          let alertTimeInMillSec = expireTimeMilliSec - 60000;\r\n          if (alertTimeInMillSec <= currentTimeInMillSec && currentTimeInMillSec <= expireTimeMilliSec) {\r\n            STORE.dispatch({ type: SESSION_DATA, sessionData: { status: SESSION_WILL_EXPIRE, showPopup: true } });\r\n            return SESSION_WILL_EXPIRE;\r\n          }\r\n          else if (currentTimeInMillSec >= expireTimeMilliSec) {\r\n            STORE.dispatch({ type: SESSION_DATA, sessionData: { status: SESSION_EXPIRED, showPopup: true } });\r\n            return SESSION_EXPIRED;\r\n          }\r\n        }\r\n        return SESSION_ACTIVE;\r\n      }\r\n      catch (e) {\r\n        return e;\r\n      }\r\n    };\r\n\r\n\r\n  }\r\n  async requestFunction(url, method, isBodyRequired, data) {\r\n    if (this.calculateExpireTime() !== SESSION_EXPIRED) {\r\n      if (url.includes('api')) {\r\n      }\r\n      var headers = { \"Content-Type\": \"application/json\" };\r\n      try {\r\n\r\n        // if (addAuthHeader) {\r\n        //   debugger\r\n        //   headers[\"Authorization\"] = `Bearer ${this.getAuthHeader()}`;\r\n        // }\r\n        let response = null;\r\n        if (isBodyRequired) {\r\n          // debugger\r\n          response = await fetch(this.manageUrl(url), {\r\n            method: method,\r\n            headers: headers,\r\n            // mode: 'no-cors',\r\n            body: JSON.stringify(data)\r\n          });\r\n        }\r\n        else {\r\n          // debugger\r\n          response = await fetch(this.manageUrl(url), {\r\n            // mode: 'no-cors',\r\n            headers: headers,\r\n            method: method,\r\n            // body: data ? data: null\r\n          })\r\n        }\r\n        return this.commonResponse(response);\r\n      }\r\n      catch (e) {\r\n        // debugger\r\n        if (localStorage.length === 0) {\r\n          window.location.reload();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  async GetData(url) {\r\n    let isBodyRequired = false;\r\n    let data = null;\r\n    return this.requestFunction(url, method = \"GET\", isBodyRequired, data);\r\n  }\r\n\r\n  async getAPI(url) {\r\n    // const host = apiConstants.api_host;\r\n    // const version = apiConstants.api_version;\r\n    // var url = new URL(host + version + route);\r\n    // let headersParameters = utilityConstants.headerParameters;\r\n    // headersParameters.Authorization = authorization;\r\n    // headersParameters.localAuthorization =\r\n    //   \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJTb21lICBTeXN0ZW0iLCJpYXQiOjE1NTg2MzY2MTAsImV4cCI6MTU5MDE3MjYxMCwiYXVkIjoic29tZWNsaWVudEBzb21lY2xpZW50ZG9tYWluLmNvbSIsInN1YiI6InNvbWVzeXN0ZW1Ac29tZXN5c3RlbWRvbWFpbi5jb20iLCJGaXJzdE5hbWUiOiJGTkFNRSIsIkxhc3ROYW1lIjoiTE5BTUUiLCJFbWFpbCI6InNvbWVjb25zdW1lckBzb21lZG9tYWluLmNvbSIsIlJvbGUiOiJVc2VyIn0.5HoQJn28n-Ic-Nwwm9xGuN_oeNoYdNkJJLE_2-gN9aM\";\r\n\r\n    // if (urlParameters != null)\r\n    //   Object.keys(urlParameters).forEach((key) =>\r\n    //     url.searchParams.append(key, urlParameters[key])\r\n    //   );\r\n    var headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: 'application/json',\r\n      responseType: 'json'\r\n    };\r\n    // debugger\r\n    let response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    });\r\n    console.log(response[\"body\"], \"<------ body\")\r\n    console.log(response.headers.get(\"Content-Type\"), \"<------ response header\")\r\n\r\n    // response =  JSON.Dump(response[\"body\"])\r\n    response = await response.json();\r\n\r\n    // await SRCLogger.api({\r\n    //   route: route,\r\n    //   apirequest: urlParameters,\r\n    //   apiresponse: response,\r\n    // });\r\n    return response;\r\n  };\r\n\r\n\r\n  async GetBlob(url, addAuthHeader = true) {\r\n    if (this.calculateExpireTime() !== SESSION_EXPIRED) {\r\n      var headers = { \"Content-Type\": \"application/json\" };\r\n      try {\r\n        if (addAuthHeader) {\r\n          headers[\"Authorization\"] = `Bearer ${this.getAuthHeader()}`;\r\n        }\r\n        const response = await fetch(this.manageUrl(url), {\r\n          mode: 'cors',\r\n          headers: headers,\r\n          method: \"GET\",\r\n        });\r\n        return await response.blob();\r\n      }\r\n      catch (e) {\r\n      }\r\n    }\r\n  }\r\n  async PostBlob(url, data, addAuthHeader = true) {\r\n    var headers = { \"Content-Type\": \"application/json\" };\r\n    try {\r\n      if (addAuthHeader) {\r\n        headers[\"Authorization\"] = `Bearer ${this.getAuthHeader()}`;\r\n      }\r\n      const response = await fetch(this.manageUrl(url), {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        mode: 'cors',\r\n        body: JSON.stringify(data)\r\n      });\r\n      return await response.blob();\r\n    }\r\n    catch (e) { }\r\n  }\r\n  async PostData(url, data) {\r\n    // debugger\r\n    let isBodyRequired = true;\r\n    return this.requestFunction(url, method = \"POST\", isBodyRequired, data);\r\n  }\r\n  async PutData(url, data, addAuthHeader = true) {\r\n    let isBodyRequired = true;\r\n    return this.requestFunction(url, addAuthHeader, method = \"PUT\", isBodyRequired, data);\r\n  }\r\n  async deleteData(url, addAuthHeader = true) {\r\n    let isBodyRequired = false;\r\n    let data = null;\r\n    return this.requestFunction(url, addAuthHeader, method = \"DELETE\", isBodyRequired, data);\r\n  }\r\n  async patchData(url, data, addAuthHeader = true) {\r\n    let isBodyRequired = true;\r\n    return this.requestFunction(url, addAuthHeader, method = \"PATCH\", isBodyRequired, data);\r\n  }\r\n  async patchInvoiceData(url, addAuthHeader = true) {\r\n    let isBodyRequired = false;\r\n    let data = null;\r\n    return this.requestFunction(url, addAuthHeader, method = \"PATCH\", isBodyRequired, data);\r\n  }\r\n  async deleteDataApiKey(url, data, addAuthHeader = true) {\r\n    let isBodyRequired = true;\r\n    return this.requestFunction(url, addAuthHeader, method = \"DELETE\", isBodyRequired, data);\r\n  }\r\n  manageUrl(url) {\r\n    if (url.indexOf('http') >= 0)\r\n      return url;\r\n    let furl = `${this._baseUrl}/${url}`;\r\n    console.log(furl, \"<----- furl\")\r\n    return furl;\r\n  }\r\n  async commonResponse(response) {\r\n    const responsedata = await response.json();\r\n    if (response.status >= 400 && response.status < 600) {\r\n      if (response.status === 403) {\r\n        window.location.reload();\r\n        return;\r\n      }\r\n      return Object.assign(Object.assign({ success: false, status: response.status }, response), { data: responsedata });\r\n    }\r\n    else {\r\n      return { success: true, status: response.status, data: responsedata };\r\n    }\r\n  }\r\n}\r\n","import { DataProvider } from '../../Common/utilities/DataProvider';\r\n\r\nexport default class randomDataServicde {\r\n  constructor(private dataProvider: DataProvider) {\r\n    this.dataProvider = new DataProvider();\r\n  }\r\n\r\n  public async getRandomData(data:any) {\r\n    // console.log(data,\"<---- data\")\r\n    // console.log(JSON.stringify(data),\"<----x\")\r\n    // debugger\r\n    data = JSON.stringify(data)\r\n    console.log(data,\"<----y\")\r\n    return this.dataProvider.GetData(`api/search/vision/?query_term=${data}`)\r\n  }\r\n\r\n  public async getPoiData(data:any) {\r\n    // console.log(data,\"<---- data\")\r\n    // console.log(JSON.stringify(data),\"<----x\")\r\n    // debugger\r\n    return this.dataProvider.PostData(`api/filter/filter/`,data)\r\n  }\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport Alert from \"@mui/material/Alert\";\nimport {\n  Input,\n  Label,\n  Col,\n  Row,\n  Button,\n  Container,\n  Navbar,\n  ButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n// import Table from \"@mui/material/Table\";\nimport TableContainer from \"@mui/material/TableContainer\";\n// import { makeStyles } from \"@mui/material/styles\";\nimport { Component } from \"react\";\n// import randomDataService from \"../Services/randomData/randomDataService\";\nimport RandomDataService from \"../Services/randomData/randomDataService\";\n// import View from \"../@dgn-src-ui/core/View\"\n// import { redirectToSrci } from \"../../utility/utility\";\n// import {\n//     dcfActionCode\n// } from \"../../redux-store/actions/Action\";\n// import { store } from \"../../redux-store/store\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { DCFACTIONCODE } from \"../../utility/constants/utilityConstants\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  BarChart,\n  Legend,\n  Tooltip,\n  Bar,\n  PieChart,\n  Pie,\n} from \"recharts\";\n\nimport Paper from \"@mui/material/Paper\";\nimport {\n  Chart,\n  BarSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n  PieSeries,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { Animation } from \"@devexpress/dx-react-chart\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\n\n// import { TweetBody } from './tweet'\nimport ReactWordcloud from \"react-wordcloud\";\nimport Box from \"@mui/material/Box\";\nimport Button1 from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n// import MaterialTable from \"material-table\";\n\nimport { useTheme } from \"@mui/material/styles\";\n// import Box from '@mui/material/Box';\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\n// import { makeStyles } from '@bit/mui-org.material-ui.styles';\nimport WordCloud from \"react-d3-cloud\";\n// import Box from '@mui/material/Box';\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport RestoreIcon from \"@mui/icons-material/Restore\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Avatar from \"@mui/material/Avatar\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Typography from \"@mui/material/Typography\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { Resizable } from \"re-resizable\";\n\nconst resizeStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\",\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst darkTheme = createTheme({\n  palette: {\n    // mode: 'dark',\n    primary: {\n      main: \"#0097a7\",\n    },\n  },\n});\n\nconst buttonTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#0097a7\",\n    },\n  },\n});\n\n// const useStyles = makeStyles(theme => ({\n//     button: {\n//       display: 'block',\n//       marginTop: theme.spacing(2),\n//     },\n//     formControl: {\n//       margin: theme.spacing(1),\n//       minWidth: 120,\n//     },\n//   }));\n\nconst names = [\n  \"Oliver Hansen\",\n  \"Van Henry\",\n  \"April Tucker\",\n  \"Ralph Hubbard\",\n  \"Omar Alexander\",\n  \"Carlos Abbott\",\n  \"Miriam Wagner\",\n  \"Bradley Wilkerson\",\n  \"Virginia Andrews\",\n  \"Kelly Snyder\",\n];\n\nconst words = [\n  {\n    text: \"told\",\n    value: 64,\n  },\n  {\n    text: \"mistake\",\n    value: 11,\n  },\n  {\n    text: \"thought\",\n    value: 16,\n  },\n  {\n    text: \"bad\",\n    value: 17,\n  },\n];\n\n// const classes = useStyles();\n\nconst OptimizedComponent = React.memo(({id,poi,tweet_text})=>{\n    return (<TableRow hover role=\"checkbox\" tabIndex={-1} key={id}>\n            \n            <ListItem>\n              <ListItemAvatar>\n                <Avatar alt=\"Profile Picture\" src={poi} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={\"tweet user\"}\n                secondary={tweet_text}\n              />\n            </ListItem>\n            {/* <TableCell key={item.tweet_text} > {item.tweet_text ? item.tweet_text : '_'} */}\n            {/* <Box sx={{ width: 500, maxHeight: 50 }}>\n              <BottomNavigation\n                showLabels\n                // value={value}\n                // onChange={(event, newValue) => {\n                //     setValue(newValue);\n                // }}\n              ></BottomNavigation>\n            </Box> */}\n            {/* </TableCell> */}\n          </TableRow>)\n})\n\nconst BottomShit = React.memo(() => {\n  return (\n    <>\n      <BottomNavigationAction label=\"Sentiments\" icon={<RestoreIcon />} />\n      <BottomNavigationAction label=\"share\" icon={<LocationOnIcon />} />\n      <BottomNavigationAction label=\"likes\" icon={<FavoriteIcon />} />\n    </>\n  );\n});\n\nconst chart_Data = [\n  { poi_name: \"1950\", percent: 2.525 },\n  { poi_name: \"1960\", percent: 3.018 },\n  { poi_name: \"1970\", percent: 3.682 },\n  { poi_name: \"1980\", percent: 4.44 },\n  { poi_name: \"1990\", percent: 5.31 },\n  { poi_name: \"2000\", percent: 6.127 },\n  { poi_name: \"2010\", percent: 6.93 },\n];\n\nconst pie_data = [\n  { type: \"Asia\", percent: 4119626293 },\n  { type: \"Africa\", percent: 1012956064 },\n  { type: \"Northern America\", percent: 344124520 },\n  { type: \"Latin America and the Caribbean\", percent: 590946440 },\n  { type: \"Europe\", percent: 727082222 },\n  { type: \"Oceania\", percent: 35104756 },\n];\n\nconst style = {\n  \"word-break\": \"break-all\",\n  \"align-items\": \"center\",\n};\n\nclass rawfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query_term: \"\",\n      getmydata: \"\",\n      chart_Data,\n      poi_data: \"\",\n      pie_data,\n      tweet_type: \"\",\n      tweet_data: [],\n      poi: \"\",\n      getmyPoiData: \"\",\n      keywords: \"\",\n      extreme: \"\",\n      lang_type: \"\",\n      country: \"\",\n      topic: \"\",\n      filter_type: \"\",\n      tweet_sentiment: \"\",\n      antivaccine_tweets: \"\",\n    };\n    this.RandomDataService = new RandomDataService();\n    this.toggle = this.toggle.bind(this);\n    // this.forgotPasswordService = new ForgotPasswordService(this);\n    // this.binder = new Binder(this);\n    // this.onGo = this.onGo.bind(this)\n    // const validationRules = {\n    //   query_term: 'nonEmptyLength'\n    // };\n    // this.validator = new Validator(validationRules);\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  //  chart_Data_1 = [\n  //     { year: '1950', population: 2.525 },\n  //     { year: '1960', population: 3.018 },\n  //     { year: '1970', population: 3.682 },\n  //     { year: '1980', population: 4.440 },\n  //     { year: '1990', population: 5.310 },\n  //     { year: '2000', population: 6.127 },\n  //     { year: '2010', population: 6.930 },\n  //   ];\n\n  //   async componentDidMount() {\n\n  //     // let result = await this.NotificationService.getNotificationCount();\n  //     // if (result && result.success) {\n  //     //   this.props.setNotificationCount(result.data);\n  //     // }\n\n  //     try {\n  //         const randomData_1 = await this.RandomDataService.getRandomData(data.query_term);\n  //         this.setState({\n  //             // getmydata : randomData,\n  //             poi_data : randomData_1.data.body.poi_dist\n  //         })\n  //     } catch (err) {\n  //         console.error(\"Damn!!!!! API breaked\");\n  //     }\n  //   }\n\n  onUserNameChange = (event) => {\n    console.log(event, \"<----on change\");\n    this.setState({\n      query_term: event.target.value,\n    });\n  };\n\n  onPoiNameChange = (event) => {\n    // debugger\n    console.log(event, \"<----on poi change\");\n    this.setState({\n      poi: event.target.value,\n      filter_type: \"poi_name\",\n    });\n    // this.getPoiData()\n  };\n\n  onLangTypeChange = (event) => {\n    // debugger\n    console.log(event, \"<----on lang type change\");\n    this.setState({\n      lang_type: event.target.value,\n      filter_type: \"lang_type\",\n    });\n    // this.getPoiData()\n  };\n\n  onCountryChange = (event) => {\n    // debugger\n    console.log(event, \"<----on country change\");\n    this.setState({\n      country: event.target.value,\n      filter_type: \"country_name\",\n    });\n    // this.getPoiData()\n  };\n\n  onTopicNameChange = (event) => {\n    // debugger\n    console.log(event, \"<----on topic change\");\n    this.setState({\n      topic: event.target.value,\n      filter_type: \"topic_name\",\n    });\n    // this.getPoiData()\n  };\n\n  onClearData = (event) => {\n    // debugger\n    // console.log(event, \"<----on topic change\")\n    this.setState({\n      poi: \"\",\n      lang_type: \"\",\n      topic: \"\",\n      country: \"\",\n    });\n    // this.getPoiData()\n  };\n\n  onClearSearchData = (event) => {\n    // debugger\n    // console.log(event, \"<----on topic change\")\n    this.setState({\n      query_term: \"\",\n    });\n    // this.getPoiData()\n  };\n\n  redirectToCreate = () => {\n    this.props.history.push(`/newfile`);\n  };\n\n  //  useStyles = makeStyles({\n  //     container: {\n  //       maxHeight: 200\n  //     }\n  //   });\n\n  async getPoiData() {\n    // debugger\n    // const merchantId = this.props.usersData ? this.props.usersData.user.MerchantId : null\n    const data = {\n      query: this.state.query_term,\n      type: this.state.filter_type,\n      poi_name: this.state.poi,\n      lang_type: this.state.lang_type,\n      country: this.state.country,\n      topic: this.state.topic,\n    };\n    try {\n      const poiData = await this.RandomDataService.getPoiData(data);\n      this.setState({\n        getmyPoiData: poiData,\n        // poi_data: randomData.data.body.poi_dist,\n        // tweet_type: randomData.data.body.tweet_type,\n        // tweet_data: [\n        //     { tweet_1: randomData.data.body.documents[0].tweet_text },\n        //     ...this.state.tweet_data]\n      });\n    } catch (err) {\n      console.error(\"Damn!!!!! API breaked\");\n    }\n  }\n\n  async getRandomData() {\n    // debugger\n    // const merchantId = this.props.usersData ? this.props.usersData.user.MerchantId : null\n    const data = {\n      query_term: this.state.query_term,\n    };\n    try {\n      const randomData = await this.RandomDataService.getRandomData(\n        data.query_term\n      );\n      this.setState({\n        getmydata: randomData,\n        poi_data: randomData.data.body.poi_dist,\n        tweet_type: randomData.data.body.tweet_type,\n        keywords: randomData.data.body.keywords,\n        extreme: randomData.data.body.extreme,\n        tweet_sentiment: randomData.data.body.tweet_sentiment,\n        antivaccine_tweets: randomData.data.body.antivaccine_tweets,\n        // tweet_data: [\n        //     { tweet_1: randomData.data.body.documents[0].tweet_text },\n        //     ...this.state.tweet_data]\n      });\n    } catch (err) {\n      console.error(\"Damn!!!!! API breaked\");\n    }\n  }\n\n  renderTweetList = () => {\n    return (\n      this.state.getmydata?.data?.body?.documents?.map((item, index) => {\n        return <OptimizedComponent poi={item.poi} tweet_text={item.tweet_text} id={item.id}/>;\n      })\n    );\n  };\n\n  renderPoiTweetList = () => {\n    return (\n      this.state.getmyPoiData &&\n      this.state.getmyPoiData.data &&\n      this.state.getmyPoiData.data.body.map((item) => {\n        return <OptimizedComponent poi={item.poi} tweet_text={item.tweet_text} id={item.id}/>;\n      })\n    );\n  };\n\n  // renderLangtypeList = () => {\n  //     return this.state.getmyPoiData &&\n  //         this.state.getmyPoiData.data &&\n  //         this.state.getmyPoiData.data.body.map((item, index) => {\n  //             return (\n\n  //                 <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n  //                     <ListItem >\n  //                         <ListItemAvatar>\n  //                             <Avatar alt=\"Profile Picture\" src={item.poi_name} />\n  //                         </ListItemAvatar>\n  //                         <ListItemText primary={item.poi_name} secondary={item.tweet_text} />\n  //                     </ListItem>\n  //                     <Box sx={{ width: 500, maxHeight: 50 }}>\n  //                         <BottomNavigation\n  //                             showLabels\n  //                         // value={value}\n  //                         // onChange={(event, newValue) => {\n  //                         //     setValue(newValue);\n  //                         // }}\n  //                         >\n  //                             <BottomNavigationAction label=\"Sentiments\" icon={<RestoreIcon />} />\n  //                             <BottomNavigationAction label=\"share\" icon={<LocationOnIcon />} />\n  //                             <BottomNavigationAction label=\"likes\" icon={<FavoriteIcon />} />\n  //                         </BottomNavigation>\n  //                     </Box>\n  //                     {/* </TableCell> */}\n  //                 </TableRow>\n  //             );\n  //         })\n  // }\n\n  renderPositiveExtreame = () => {\n    // debugger\n    return (\n      this.state.extreme &&\n      this.state.extreme &&\n      this.state.extreme.positive_tweets &&\n      this.state.extreme.positive_tweets.map((item, index) => {\n        return (\n          // <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n          //     <TableCell key={item} > {item ? item : '_'} </TableCell>\n          // </TableRow>\n\n          <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n            {/* <CssBaseline /> */}\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar alt=\"Profile Picture\" src={this.state.poi} />\n              </ListItemAvatar>\n              <ListItemText primary={\"tweet user\"} secondary={item} />\n            </ListItem>\n            {/* <TableCell key={item.tweet_text} > {item.tweet_text ? item.tweet_text : '_'} */}\n            <Box sx={{ width: 400, maxHeight: 50 }}>\n              <BottomNavigation\n                showLabels\n                // value={value}\n                // onChange={(event, newValue) => {\n                //     setValue(newValue);\n                // }}\n              >\n                <BottomNavigationAction\n                  label=\"Sentiments\"\n                  icon={<RestoreIcon />}\n                />\n                <BottomNavigationAction\n                  label=\"share\"\n                  icon={<LocationOnIcon />}\n                />\n                <BottomNavigationAction label=\"likes\" icon={<FavoriteIcon />} />\n              </BottomNavigation>\n            </Box>\n            {/* </TableCell> */}\n          </TableRow>\n        );\n      })\n    );\n  };\n\n  renderNegativeExtreame = () => {\n    // debugger\n    return (\n      this.state.extreme &&\n      this.state.extreme &&\n      this.state.extreme.negative_tweets &&\n      this.state.extreme.negative_tweets.map((item, index) => {\n        return (\n          // <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n          //     <TableCell key={item} > {item ? item : '_'} </TableCell>\n          // </TableRow>\n\n          <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n            {/* <CssBaseline /> */}\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar alt=\"Profile Picture\" src={this.state.poi} />\n              </ListItemAvatar>\n              <ListItemText primary={\"tweet user\"} secondary={item} />\n            </ListItem>\n            {/* <TableCell key={item.tweet_text} > {item.tweet_text ? item.tweet_text : '_'} */}\n            <Box sx={{ width: 400, maxHeight: 50 }}>\n              <BottomNavigation\n                showLabels\n                // value={value}\n                // onChange={(event, newValue) => {\n                //     setValue(newValue);\n                // }}\n              >\n                <BottomNavigationAction\n                  label=\"Sentiments\"\n                  icon={<RestoreIcon />}\n                />\n                <BottomNavigationAction\n                  label=\"share\"\n                  icon={<LocationOnIcon />}\n                />\n                <BottomNavigationAction label=\"likes\" icon={<FavoriteIcon />} />\n              </BottomNavigation>\n            </Box>\n            {/* </TableCell> */}\n          </TableRow>\n        );\n      })\n    );\n  };\n\n  renderSentimentTweets = () => {\n    // debugger\n    return (\n      this.state.getmydata &&\n      this.state.getmydata.data &&\n      this.state.getmydata.data.body &&\n      this.state.getmydata.data.body.antivaccine_tweets &&\n      this.state.getmydata.data.body.antivaccine_tweets.antivaccine_tweets.map(\n        (item, index) => {\n          return (\n            // <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n            //     <TableCell key={item} > {item ? item : '_'} </TableCell>\n            // </TableRow>\n\n            <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n              {/* <CssBaseline /> */}\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar alt=\"Profile Picture\" src={this.state.poi} />\n                </ListItemAvatar>\n                <ListItemText primary={\"tweet user\"} secondary={item} />\n              </ListItem>\n              {/* <TableCell key={item.tweet_text} > {item.tweet_text ? item.tweet_text : '_'} */}\n              <Box sx={{ width: 400, maxHeight: 50 }}>\n                <BottomNavigation\n                  showLabels\n                  // value={value}\n                  // onChange={(event, newValue) => {\n                  //     setValue(newValue);\n                  // }}\n                >\n                  <BottomNavigationAction\n                    label=\"Sentiments\"\n                    icon={<RestoreIcon />}\n                  />\n                  <BottomNavigationAction\n                    label=\"share\"\n                    icon={<LocationOnIcon />}\n                  />\n                  <BottomNavigationAction\n                    label=\"likes\"\n                    icon={<FavoriteIcon />}\n                  />\n                </BottomNavigation>\n              </Box>\n              {/* </TableCell> */}\n            </TableRow>\n          );\n        }\n      )\n    );\n  };\n\n  render() {\n    console.log(\"RE RENDER\");\n\n    // console.log(this.props,this.event,\"<----\")\n    // console.log(this.state.query_term, \"<---- value\")\n    // console.log(this.state.poi, \"<----poi value\")\n    // console.log(this.state.lang_type, \"<----lang type\")\n    // console.log(this.state.filter_type, \"<----filter value\")\n    // console.log(this.state.getmydata, \"<---- value\")\n\n    // console.log(chart_Data, \"<---- chart_Data\")\n    // console.log(this.state.poi_data, \"<---- poi_Data\")\n\n    // console.log(this.state.pie_data, \"<---- pie type_Data\")\n    // console.log(this.state.tweet_type, \"<---- type_Data\")\n\n    // console.log(this.state.tweet_data, \"<---- tweet_Data\")\n\n    const chartData = this.state.poi_data\n      ? this.state.poi_data\n      : this.state.chart_Data;\n    const chartData_1 = this.state.tweet_type\n      ? this.state.tweet_type\n      : this.state.pie_data;\n    // console.log(chartData_1, \"<---- chart_Data\")\n    const tweet = this.state.tweet_data ? this.state.tweet_data : null;\n    const keywords = this.state.keywords ? this.state.keywords : null;\n    // console.log(words, \"<---- words\")\n    // console.log(keywords, \"<---- keywords\")\n    const extreme = this.state.extreme ? this.state.extreme : null;\n    // console.log(extreme, \"<---- extreme\")\n    const tweet_sentiment = this.state.tweet_sentiment\n      ? this.state.tweet_sentiment\n      : null;\n    const antivaccine_tweets = this.state.antivaccine_tweets\n      ? this.state.antivaccine_tweets\n      : null;\n    // console.log(antivaccine_tweets, \"<---- antivaccine_tweets\")\n    // const tweet = this.state.getmydata.data.body.documents[0].tweet_text ? this.state.getmydata.data.body.documents.tweet_text : null\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <ThemeProvider theme={darkTheme}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"primary\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                variant=\"h4\"\n                align=\"left\"\n                component=\"div\"\n                sx={{ flexGrow: 4 }}\n              >\n                Ting\n              </Typography>\n              {/* <ThemeProvider theme={buttonTheme}> */}\n              <Button1\n                className=\"cancel-btn\"\n                variant=\"contained\"\n                color=\"secondary\"\n                //   style={{ fontSize: '14px', paddingTop: '15%' }}\n                id=\"back\"\n                onClick={() => this.redirectToCreate()}\n              >\n                <i className=\"fa fa-chevron-left\" /> Overall Analysis\n              </Button1>\n              {/* </ThemeProvider> */}\n            </Toolbar>\n          </AppBar>\n        </ThemeProvider>\n\n        <Grid container spacing={2}>\n          <Grid item xs={10}>\n            <p className=\"currency-pay-body\">{/* Please enter your query */}</p>\n            <Row align=\"centre\">\n              {/* <Grid item xs={1}>hi</Grid> */}\n              {/* <Col></Col> */}\n              {/* <Col xs=\"2\"> */}\n              {/* <Grid item xs={4}> */}\n              {/* <Row align=\"centre\"> */}\n              <TextField\n                // fullWidth\n                variant=\"outlined\"\n                label=\"Search tweet\"\n                // type='query_term'\n                id=\"query_term\"\n                name=\"query_term\"\n                // className='floating-input'\n                value={this.state.query_term}\n                // placeholder=' '\n                onChange={this.onUserNameChange}\n              />\n              {/* </Row> */}\n              {/* </Grid> */}\n              {/* <Grid item xs={3}></Grid> */}\n              {/* <Label >raw name</Label> */}\n              {/* </Col> */}\n              {/* <Col></Col> */}\n            </Row>\n\n            <Row>\n              {/* <Button1\n                                className='cancel-btn'\n                                //   style={{ fontSize: '14px', paddingTop: '15%' }}\n                                id='back'\n                                onClick={() => this.redirectToCreate()}\n                            >\n                                <i className='fa fa-chevron-left' /> Back to newfile\n                </Button1> */}\n\n              <Button1\n                className=\"cancel-btn\"\n                //   style={{ fontSize: '14px', paddingTop: '15%' }}\n                id=\"back\"\n                onClick={() => this.onClearSearchData()}\n              >\n                <i className=\"fa fa-chevron-left\" /> clear\n              </Button1>\n\n              <Button1\n                // className='cancel-btn'\n                // variant=\"contained\"\n                //   style={{ fontSize: '14px', paddingTop: '15%' }}\n                id=\"getdata\"\n                onClick={() => this.getRandomData()}\n              >\n                <i className=\"fa fa-chevron-left\" /> Enter\n              </Button1>\n            </Row>\n          </Grid>\n\n          <Grid item xs={3}>\n            <TableHead>\n              <TableCell style={{ minWidth: 450 }} align=\"center\">\n                {\" \"}\n                Filter{\" \"}\n              </TableCell>\n            </TableHead>\n            <TableRow>\n              <FormControl variant=\"standard\" sx={{ m: 1, width: 250 }}>\n                <InputLabel id=\"demo-controlled-open-select-label\">\n                  POI\n                </InputLabel>\n                <Select\n                  labelId=\"demo-controlled-open-select-label\"\n                  id=\"demo-controlled-open-select\"\n                  // open={true}\n                  // onClose={handleClose}\n                  // onOpen={this.getPoiData}\n                  // onClick={this.getPoiData}\n                  value={this.state.poi}\n                  onChange={this.onPoiNameChange}\n                >\n                  {/* <MenuItem value=\"Narendra Modi\">\n                                    <em>None</em>\n                                </MenuItem> */}\n                  <MenuItem value={\"Narendra Modi\"}>Narendra Modi</MenuItem>\n                  <MenuItem value={\"Kamala Harris\"}>Kamala Harris</MenuItem>\n                  <MenuItem value={\"PMO India\"}>PMO India</MenuItem>\n                </Select>\n              </FormControl>\n            </TableRow>\n\n            <TableRow>\n              <FormControl variant=\"standard\" sx={{ m: 1, width: 250 }}>\n                <InputLabel id=\"demo-controlled-open-select-label\">\n                  Language\n                </InputLabel>\n                <Select\n                  labelId=\"demo-controlled-open-select-label\"\n                  id=\"demo-controlled-open-select\"\n                  // open={true}\n                  // onClose={handleClose}\n                  // onOpen={this.getPoiData}\n                  // onClick={this.getPoiData}\n                  value={this.state.lang_type}\n                  onChange={this.onLangTypeChange}\n                >\n                  {/* <MenuItem value=\"Narendra Modi\">\n                                    <em>None</em>\n                                </MenuItem> */}\n                  <MenuItem value={\"en\"}> English</MenuItem>\n                  <MenuItem value={\"es\"}>Spain</MenuItem>\n                  <MenuItem value={\"hi\"}>Hindi</MenuItem>\n                </Select>\n              </FormControl>\n            </TableRow>\n\n            <TableRow>\n              <FormControl variant=\"standard\" sx={{ m: 1, width: 250 }}>\n                <InputLabel id=\"demo-controlled-open-select-label\">\n                  Country\n                </InputLabel>\n                <Select\n                  labelId=\"demo-controlled-open-select-label\"\n                  id=\"demo-controlled-open-select\"\n                  // open={true}\n                  // onClose={handleClose}\n                  // onOpen={this.getPoiData}\n                  // onClick={this.getPoiData}\n                  value={this.state.country}\n                  onChange={this.onCountryChange}\n                >\n                  {/* <MenuItem value=\"Narendra Modi\">\n                                    <em>None</em>\n                                </MenuItem> */}\n                  <MenuItem value={\"usa\"}> USA</MenuItem>\n                  <MenuItem value={\"india\"}>INDIA</MenuItem>\n                  <MenuItem value={\"mexico\"}>Mexico</MenuItem>\n                </Select>\n              </FormControl>\n            </TableRow>\n\n            <TableRow>\n              <FormControl variant=\"standard\" sx={{ m: 1, width: 250 }}>\n                <InputLabel id=\"demo-controlled-open-select-label\">\n                  Topic\n                </InputLabel>\n                <Select\n                  labelId=\"demo-controlled-open-select-label\"\n                  id=\"demo-controlled-open-select\"\n                  // open={true}\n                  // onClose={handleClose}\n                  // onOpen={this.getPoiData}\n                  // onClick={this.getPoiData}\n                  value={this.state.topic}\n                  onChange={this.onTopicNameChange}\n                >\n                  {/* <MenuItem value=\"Narendra Modi\">\n                                    <em>None</em>\n                                </MenuItem> */}\n                  <MenuItem value={\"Others\"}> Others</MenuItem>\n                  <MenuItem value={\"Lockdowns\"}>Lockdowns</MenuItem>\n                  <MenuItem value={\"Airline Passengers\"}>\n                    Airline Passengers\n                  </MenuItem>\n                  <MenuItem value={\"Vaccines\"}>Vaccines</MenuItem>\n                  <MenuItem value={\"Covid Cases\"}>Covid Cases</MenuItem>\n                  <MenuItem value={\"Government\"}>Government</MenuItem>\n                  <MenuItem value={\"Schools\"}>Schools</MenuItem>\n                </Select>\n              </FormControl>\n            </TableRow>\n\n            <Button1\n              // className='cancel-btn'\n              // variant=\"contained\"\n              //   style={{ fontSize: '14px', paddingTop: '15%' }}\n              id=\"getdata1\"\n              onClick={() => this.getPoiData()}\n            >\n              <i className=\"fa fa-chevron-left\" /> Search\n            </Button1>\n\n            <Button1\n              // className='cancel-btn'\n              // variant=\"contained\"\n              //   style={{ fontSize: '14px', paddingTop: '15%' }}\n              id=\"getdata1\"\n              onClick={() => this.onClearData()}\n            >\n              <i className=\"fa fa-chevron-left\" /> Clear\n            </Button1>\n            <Grid>\n              <TableCell style={{ minWidth: 400 }} align=\"center\">\n                Positive Extreme\n              </TableCell>\n              {extreme ? this.renderPositiveExtreame() : null}\n            </Grid>\n            <Grid>\n              <TableCell style={{ minWidth: 400 }} align=\"center\">\n                Negative Extreme\n              </TableCell>\n              {extreme ? this.renderNegativeExtreame() : null}\n            </Grid>\n\n            <Grid>\n              <TableCell style={{ minWidth: 400 }} align=\"center\">\n                Sentiment tweets\n              </TableCell>\n              {antivaccine_tweets ? this.renderSentimentTweets() : null}\n            </Grid>\n          </Grid>\n\n          <Grid item xs={5}>\n            <Box sx={{ width: \"100%\" }}>\n              <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n                <TableContainer sx={{ maxHeight: 1400 }}>\n                  <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell style={{ minWidth: 170 }} align=\"center\">\n                          Tweet Text\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {/* {this.state.getmydata &&\n                      this.state.getmydata.data &&\n                      this.state.getmydata.data.body &&\n                      this.state.getmydata.data.body.documents\n                        ? this.renderTweetList()\n                        : \"No data\"} */}\n                      {this.state.getmyPoiData ? this.renderPoiTweetList() : this.renderTweetList()}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Paper>\n            </Box>\n          </Grid>\n          <Grid item xs={4}>\n            <TableHead>\n              <TableCell style={{ minWidth: 500 }} align=\"center\">\n                {\" \"}\n                Analysis{\" \"}\n              </TableCell>{\" \"}\n            </TableHead>\n            {/* <Item>xs=4</Item> */}\n\n            {this.state.keywords ? (\n              <Grid>\n                <TableHead>\n                  <TableCell style={{ minWidth: 500 }} align=\"center\">\n                    {\" \"}\n                    Word Cloud{\" \"}\n                  </TableCell>{\" \"}\n                </TableHead>\n                {/* <Row align=\"centre\"> */}\n                <Resizable\n                  defaultSize={{\n                    width: 600,\n                    height: 300,\n                  }}\n                  style={resizeStyle}\n                >\n                  <div style={{ width: \"100%\", height: \"100%\" }}>\n                    <ReactWordcloud\n                      words={keywords}\n                      options={{\n                        fontFamily: \"courier new\",\n                        fontSizes: [10, 40],\n                      }}\n                    />\n                  </div>\n                </Resizable>\n\n                {/* </Row> */}\n              </Grid>\n            ) : null}\n\n            {/* {this.state.keywords ?\n                   <WordCloud data={keywords} /> : null} */}\n\n            {this.state.tweet_sentiment ? (\n              <Grid>\n                {\" \"}\n                <TableHead>\n                  {\" \"}\n                  <TableCell style={{ minWidth: 500 }} align=\"center\">\n                    {\" \"}\n                    Tweet Sentiments{\" \"}\n                  </TableCell>{\" \"}\n                </TableHead>\n                <BarChart width={500} height={250} data={tweet_sentiment}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"type\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"percent\" fill=\"#8884d8\" />\n                  {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" /> */}\n                </BarChart>\n              </Grid>\n            ) : null}\n\n            {this.state.poi_data[0] ? (\n              <Grid>\n                {\" \"}\n                <TableHead>\n                  <TableCell style={{ minWidth: 500 }} align=\"center\">\n                    {\" \"}\n                    POI data{\" \"}\n                  </TableCell>\n                </TableHead>\n                <BarChart width={630} height={250} data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"poi_name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"percent\" fill=\"#8884d8\" />\n                  {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" /> */}\n                </BarChart>\n              </Grid>\n            ) : null}\n            {this.state.tweet_type ? (\n              <Grid>\n                <TableHead>\n                  <TableCell style={{ minWidth: 500 }} align=\"center\">\n                    {\" \"}\n                    Type{\" \"}\n                  </TableCell>\n                </TableHead>\n                <PieChart width={500} height={350}>\n                  <Pie\n                    data={chartData_1}\n                    dataKey=\"percent\"\n                    nameKey=\"type\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    label\n                  />\n                  <Tooltip />\n                  {/* <Pie data={data02} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#82ca9d\" label /> */}\n                </PieChart>\n              </Grid>\n            ) : null}\n          </Grid>\n\n          {/* {this.state.keywords ?\n                    <ReactWordcloud words={keywords}/> : null} */}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default rawfile;\n","import React, { useState, useEffect } from \"react\";\nimport Alert from \"@mui/material/Alert\";\nimport { Input, Label, Col, Row, Button, Container, Navbar, ButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\n// import Table from \"@mui/material/Table\";\nimport TableContainer from \"@mui/material/TableContainer\";\n// import { makeStyles } from \"@mui/material/styles\";\nimport { Component } from \"react\";\n// import randomDataService from \"../Services/randomData/randomDataService\";\nimport RandomDataService from \"../Services/randomData/randomDataService\"\n// import View from \"../@dgn-src-ui/core/View\"\n// import { redirectToSrci } from \"../../utility/utility\";\n// import {\n//     dcfActionCode\n// } from \"../../redux-store/actions/Action\";\n// import { store } from \"../../redux-store/store\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { DCFACTIONCODE } from \"../../utility/constants/utilityConstants\";\n\nimport Paper from '@mui/material/Paper';\n// import {\n//     Chart,\n//     BarSeries,\n//     Title,\n//     ArgumentAxis,\n//     ValueAxis,\n//     PieSeries\n// } from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport Grid from '@mui/material/Grid';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n\n// import { TweetBody } from './tweet'\nimport ReactWordcloud from 'react-wordcloud';\nimport Box from '@mui/material/Box';\nimport Button1 from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n// import MaterialTable from \"material-table\";\n\nimport { useTheme } from '@mui/material/styles';\n// import Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\n// import { makeStyles } from '@bit/mui-org.material-ui.styles';\nimport WordCloud from 'react-d3-cloud';\n// import { Chart, ChartLegend, ChartSeries, ChartSeriesItem, ChartSeriesLabels } from '@progress/kendo-react-charts';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, BarChart, Legend, Tooltip, Bar, PieChart, Pie } from 'recharts';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Typography from '@mui/material/Typography';\nimport { Bar as Bar1 } from 'react-chartjs-2';\n\nconst population_data = [\n    { Keyword: 'people', Sentiment_Score: -52.56 },\n    { Keyword: 'lockdown', Sentiment_Score: -13.79 },\n    { Keyword: 'jab', Sentiment_Score: -2.51 },\n    { Keyword: 'age', Sentiment_Score: -0.49 },\n    { Keyword: 'mask', Sentiment_Score: 0.3 },\n    { Keyword: 'shot', Sentiment_Score: 2.5 },\n    { Keyword: 'government', Sentiment_Score: 2.4 },\n    { Keyword: 'vaccination', Sentiment_Score: 1.41 },\n    { Keyword: 'vaccine', Sentiment_Score: 9.75 }\n];\n\n\n\nconst reply_data = [{ poi_name: 'CMO KERALA', reply_sentiment: -0.54 },\n{ poi_name: 'Jaime Bonilla Valdez', reply_sentiment: -0.0 },\n{ poi_name: 'Felipe Calderón', reply_sentiment: -0.0 },\n{ poi_name: 'Bill Gates', reply_sentiment: 0.45 },\n{ poi_name: 'Adar Poonawalla', reply_sentiment: 0.35 },\n{ poi_name: 'sonu sood', reply_sentiment: 0.31 },\n{ poi_name: 'President Biden', reply_sentiment: 0.24 },\n{ poi_name: 'Barack Obama', reply_sentiment: 0.29 },\n{ poi_name: 'VP Kamala Harris', reply_sentiment: 0.18 },\n{ poi_name: 'WHO', reply_sentiment: 0.12 }];\n\n\nconst lang_data = [\n    { type: 'Hindi', percent: 7.9 },\n    { type: 'English', percent: 71.6 },\n    { type: 'Spanish', percent: 20.3 }\n];\n\n\n\n\nconst antivac_data = [\n    { type: 'USA', percent: 92 },\n    { type: 'INDIA', percent: 2 },\n    { type: 'MEXICO', percent: 4 }\n];\n\nconst data = [\n    {\n      name: \"Page A\",\n      uv: 4000,\n      pv: 2400,\n      amt: 2400\n    }]\n\n\nconst vax_data = [\n    {\n        name : 'Pfizer',\n        Positive : 34,\n        Negative : 23,\n        Neutral : 21\n    },\n    {\n        name : 'JnJ',\n        Positive : 41,\n        Negative : 17,\n        Neutral : 41\n\n    },\n    {\n        name : 'Moderna',\n        Positive : 38,\n        Negative : 24,\n        Neutral : 36\n\n    },\n    {\n        name : 'Covishield',\n        Positive : 49,\n        Negative : 25,\n        Neutral : 25\n\n    },\n    {\n        name : 'Covaxin',\n        Positive : 56,\n        Negative : 18,\n        Neutral : 24\n\n    }\n]\n\nconst vaccine_data = {\n    labels: [\n        \"Pfizer\",\n        \"JnJ\",\n        \"Moderna\",\n        \"Covishield\",\n        \"Covaxin\"\n    ],\n    datasets: [\n        {\n            label: \"Positive\",\n            backgroundColor: \"rgba(255,99,132,0.2)\",\n            borderColor: \"rgba(255,99,132,1)\",\n            borderWidth: 1,\n            stack: 1,\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            hoverBorderColor: \"rgba(255,99,132,1)\",\n            data: [34, 41, 38, 49, 56]\n        },\n\n        {\n            label: \"Negative\",\n            backgroundColor: \"rgba(155,231,91,0.2)\",\n            borderColor: \"rgba(255,99,132,1)\",\n            borderWidth: 1,\n            stack: 1,\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            hoverBorderColor: \"rgba(255,99,132,1)\",\n            data: [23, 17, 24, 25, 18]\n        },\n        {\n            label: \"Neutral\",\n            backgroundColor: \"rgba(155,231,91,0.2)\",\n            borderColor: \"rgba(255,99,132,1)\",\n            borderWidth: 1,\n            stack: 1,\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            hoverBorderColor: \"rgba(255,99,132,1)\",\n            data: [41, 41, 36, 25, 24]\n        }\n    ]\n}\n\n\n\n\n\nclass newfile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            //   NewPassword: '',\n            //   flag: false,\n            //   Answer: '',\n            //   QuestionId: '',\n            //   showQuetionBox: false,\n            UserIdentity: '',\n            //   errors: {},\n            //   isLoader: false\n        }\n        // this.forgotPasswordService = new ForgotPasswordService(this);\n        // this.binder = new Binder(this);\n        // this.onGo = this.onGo.bind(this)\n        // const validationRules = {\n        //   UserIdentity: 'nonEmptyLength'\n        // };\n        // this.validator = new Validator(validationRules);\n    }\n\n\n    onUserNameChange = (event) => {\n        this.setState({\n            UserIdentity: event.target.value\n        })\n    }\n\n    redirectToCreate = () => {\n        this.props.history.push(`/rawfile`);\n    }\n\n    render() {\n        const options = {\n            responsive: true,\n            legend: {\n                display: false,\n            },\n            type: 'bar',\n            scales: {\n                xAxes: [{\n                    stacked: true\n                }],\n                yAxes: [{\n                    stacked: true\n                }]\n            }\n        }\n        return (\n\n            <div style={{ textAlign: \"center\" }} >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            sx={{ mr: 2 }}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h4\" align='left' component=\"div\" sx={{ flexGrow: 4 }}>\n                            Ting\n          </Typography>\n\n                    </Toolbar>\n                </AppBar>\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={9}>\n                        <TableCell style={{ minWidth: 1000 }} align='center'> Overall analysis </TableCell>\n\n                    </Grid>\n\n\n\n\n\n                    <Grid item xs={10}>\n                        <TableCell style={{ minWidth: 800 }} align='center'> Population data </TableCell>\n                        <BarChart width={1000} height={250} data={population_data}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"Keyword\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Bar dataKey=\"Sentiment_Score\" fill=\"#8884d8\" />\n                            {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" /> */}\n                        </BarChart>\n\n                    </Grid>\n\n                    <Grid item xs={10}>\n                        <TableCell style={{ minWidth: 800 }} align='center'> Reply data </TableCell>\n\n                        <LineChart width={1400} height={250} data={reply_data}\n                            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                            <CartesianGrid strokeDasharray=\"5 5\" />\n                            <XAxis dataKey=\"poi_name\" />\n                            {/* <XAxis  /> */}\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line type=\"poi_name\" dataKey=\"reply_sentiment\" stroke=\"#8884d8\" />\n                            {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\n                        </LineChart>\n\n                    </Grid>\n\n                    <Grid item xs={5}>\n                        <TableCell style={{ minWidth: 400 }} align='center'> Language data </TableCell>\n                        <PieChart width={400} height={250}>\n                            <Pie data={lang_data} dataKey=\"percent\" nameKey=\"type\" cx=\"50%\" cy=\"50%\" outerRadius={50} fill=\"#8884d8\" label />\n                            <Tooltip />\n                            {/* <Pie data={data02} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#82ca9d\" label /> */}\n                        </PieChart>\n\n                    </Grid>\n\n                    <Grid item xs={4}>\n                        <TableCell style={{ minWidth: 400 }} align='center'> Anti-vaccine data </TableCell>\n                        <PieChart width={400} height={250}>\n                            <Pie data={antivac_data} dataKey=\"percent\" nameKey=\"type\" cx=\"50%\" cy=\"50%\" outerRadius={50} fill=\"#8884d8\" label />\n                            <Tooltip />\n                            {/* <Pie data={data02} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#82ca9d\" label /> */}\n                        </PieChart>\n\n                    </Grid>\n\n                    <Grid>\n                    <TableCell style={{ minWidth: 800 }} align='center'> Vax data </TableCell>\n                        <BarChart width={1000} height={250} data={vax_data}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Bar dataKey=\"Positive\" fill=\"#8884d8\" />\n                            <Bar dataKey=\"Negative\" fill=\"#82ca9d\" />\n                            <Bar dataKey=\"Neutral\" fill=\"#57c0e8\" />\n                            {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" /> */}\n                        </BarChart>\n                    </Grid>\n\n                </Grid>\n\n                {/* <p className='currency-pay-body'>\n                            //  Dont enter anything \n              </p>\n                        <Row>\n                            <Col>\n                                <Input\n                                    type='UserIdentity'\n                                    id='UserIdentity'\n                                    name='UserIdentity'\n                                    className='floating-input'\n                                    //   value={this.state.UserIdentity}\n                                    placeholder=' '\n                                    onChange={this.onUserNameChange}\n                                />\n\n\n                                <Label >Just dont enter</Label>\n                            </Col>\n                        </Row> */}\n\n                <Row>\n\n                    <Button\n                        className='cancel-btn'\n                        //   style={{ fontSize: '14px', paddingTop: '15%' }}\n                        id='back'\n                        onClick={() => this.redirectToCreate()}\n                    >\n                        <i className='fa fa-chevron-left' /> back to rawfile\n                        </Button>\n\n                </Row>\n\n            </div>\n\n\n        );\n    }\n};\n\nexport default newfile;","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport * as React from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport ProTip from './ProTip';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n// import { Routes  } from 'react-router-dom';\nimport { urlRoutesConstants } from \"./utility/constants/urlRoutesConstants\";\nimport rawfile from \"./pages/rawfile\"\nimport newfile from \"./pages/newfile\"\nimport 'devextreme/dist/css/dx.light.css';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function App() {\n  return (\n    // <Container maxWidth=\"sm\">\n    //   <Box sx={{ my: 4 }}>\n    //     <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n    //       Create React App v5 example\n    //     </Typography>\n    //     <ProTip />\n    //     <Copyright />\n\n    //   </Box>\n    // </Container>\n    <Router>\n    <Switch>\n\n    <Route\n      exactl\n      path={urlRoutesConstants.rawfile}\n      component={rawfile}\n    />\n     <Route\n      exactl\n      path={urlRoutesConstants.newfile}\n      component={newfile}\n    />\n      \n    </Switch>\n  </Router>\n  );\n}\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}